name: Uat to Prod Frontend
permissions:
  contents: read
  id-token: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Confirm version to deploy to prod'
        required: true
        default: ''

jobs:
  sync-image-to-prod-ecr:
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ap-southeast-2
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_FRONTEND }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: pull latest image from uat ecr
        run: docker pull ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_UAT_FRONTEND }}:${{ inputs.version }}
        
      - name: retag and push image to prod ecr
        run: |
          docker tag ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_UAT_FRONTEND }}:${{ inputs.version }} ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_PROD_FRONTEND }}:${{ inputs.version }}-uat-tested
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_PROD_FRONTEND }}:${{ inputs.version }}-uat-tested

  deploy-to-ecs:
    environment: prod
    runs-on: ubuntu-latest
    needs: sync-image-to-prod-ecr
    steps:
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ap-southeast-2
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_FRONTEND }}
          
      - name: update ecs service
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER_PROD }} --service ${{ secrets.ECS_SERVICE_PROD_FRONTEND }} --force-new-deployment --region ap-southeast-2
