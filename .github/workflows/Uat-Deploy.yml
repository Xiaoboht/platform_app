name: Uat Deploy Frontend
permissions:
  contents: read
  id-token: write
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Confirm version to deploy to uat'
        required: true
        default: ''
jobs:
  rerun-CI-workflow:
    uses: ./.github/workflows/CI.yml
  push-image-to-ecr:
    environment: uat
    name: Build and Push Image
    runs-on: ubuntu-latest
    needs: rerun-CI-workflow
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ap-southeast-2
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_FRONTEND }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Image to Amazon ECR
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_UAT_FRONTEND }}:${{ inputs.version }} .
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_UAT_FRONTEND }}:${{ inputs.version }}

  deploy-to-ecs:
    environment: uat
    name: Deploy to ECS
    runs-on: ubuntu-latest
    needs: push-image-to-ecr
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ap-southeast-2
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_FRONTEND }}

      - name: Update ECS service
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER_UAT }} --service ${{ secrets.ECS_SERVICE_UAT }} --force-new-deployment --region ap-southeast-2
